#
# Build configuration for Circle CI
#
version: 2
jobs:
  build:
    docker:    # alternativ "machine/docker" (machine is not working on CirleCi Free Account)
      # - image: circleci/openjdk:8-jdk-browsers    #"cirlceci/" im Pfad notwendig, damit der Circlci Container "" gefunden wird
      - image: circleci/android:api-28-alpha    #container images
    #Environment können lokal oder auch auf dem entfernten Circleci gesetzt
    environment:
      # Date format to be used in naming "yyyymmddHHMM" (Shellscripting Code)
      JVM_OPTS: -Xmx3200m
      VERSION_DATE_LOCAL : 'someDateWithSyntax'
      APK_PATH: '/outputs/apk/app-debug.apk'
      APP_VERSION_CODE_LOCAL: '1'
      TESTVARIABLE_LOCAL: 'myTestVariableValue'
      VERSIONNAME_LOCAL: 'meineLokaleVersionName'

    steps:
      - checkout

      #Wiederherstellung des Cache (von vorherigem Build) (?)
      # - restore_cache:
      #     key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

      - run:
          name: Ausgabe environment Variablen
          command: env
     
      # - run:
      #     name: Running tests   #Name of Circleci Step
      #     command: make test    #runs "make test" via Shell

      - run:
          name: Gradle build mit dem Zweck, Circleci Variablen (aus config.yml) an Gradle weiterreichen 
          command: ./gradlew

          
      - run:
          name: Gebe die lokalen Variablen aus
          command: |
            echo $VERSION_DATE
            echo $APK_PATH

          
      - run:
          name: Gebe die Variablen aus entfernten Circleci aus (gehörten angelegt)
          command: |
            echo $APK_PATH_REMOTE
            echo $VERSION_DATE_REMOTE
            echo $APP_VERSION_NAME_REMOTE
            echo $APP_VERSION_CODE_REMOTE

      #Speichere Zustand in Cache (von nächstes Build) (?)
      # - save_cache:
      #     paths:
      #       - ~/.gradle
      #     key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

      # - run:
      #     name: Run Tests
      #     command: ./gradlew testDebug


dependencies:
    pre:
      # Update Android dependent SDK and tools
      # That settings need to be synced with Android Studio build settings
      - echo y | android update sdk --no-ui --all --filter tools,extra-android-m2repository,extra-android-support,android-25
      - echo y | android update sdk --no-ui --all --filter build-tools-25.0.2

test:
    override:
        #"-P" ist das Gradle system property. CI for Continous Integration (ToDo: Checkout https://github.com/paulbakker/configuration-example/blob/master/cnf/gradle/doc/BUILDING-GRADLE.md)
        # - ./gradlew assembleDebug -PtestVariable='TestVariableValue' -PtestVariable='TestVariableValue' -Pusername=user123 -Ppassword=userpass -PversionCode=$((APP_VERSION_CODE_LOCAL+1)) -PtestVariable='TestVariableValue'
        - ./gradlew printSystem -PversionName=$VERSIONNAME_LOCAL -PtestVariable='TestVariableValue' -Pusername=user123 -Ppassword=userpass -PversionCode=$((APP_VERSION_CODE_LOCAL+1)) -PtestVariable='TestVariableValue'
        
        # kopiere es in einen anderen gewünschten Pfad
        # - cp -r app/build/outputs $CIRCLE_ARTIFACTS

deployment:
  development:
    branch: master
    commands:
      # We want pass some information to shell script
      #   1. Build location 
      #   2. API token from environment variable (CircleCI dashboard)
      #   3. Hockey App APP_ID
      - ./scripts/deploy_hockeyapp.sh $CIRCLE_ARTIFACTS$APK_PATH $AWESOME_TOKEN $HOCKEYAPP_APP_ID

#$HOCKEYAPP_APP_ID

